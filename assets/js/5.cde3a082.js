(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{241:function(a,t,e){a.exports=e.p+"assets/img/authorization.1092b8ce.png"},250:function(a,t,e){"use strict";e.r(t);var n=[function(){var a=this,t=a.$createElement,n=a._self._c||t;return n("div",{staticClass:"content"},[n("p",[a._v("最近在用vue做一个微信公众号项目，在此记录遇到的问题及解决方法。\n")]),a._v(" "),n("h1",{attrs:{id:"微信授权方案"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#微信授权方案","aria-hidden":"true"}},[a._v("#")]),a._v(" 微信授权方案")]),a._v(" "),n("p",[a._v("采用前后端分离的方式进行开发，但是微信授权中涉及签名和token校验依赖服务端，授权时必须通过域名，且端口号必须为80，这对于本地开发调试极为不利。所以通过服务端进行授权。\n授权流程如下：")]),a._v(" "),n("p",[n("img",{attrs:{src:e(241),alt:"授权流程",title:"授权流程"}})]),a._v(" "),n("p",[a._v("在router.beforeEach判断该用户是否授权，如果没有授权就跳转到服务端授权接口，跳转时要携带要重定向url，走授权流程跳转到授权确认页面，用户确认授权后，微信服务器发起回调请求，携带code回调到服务端，服务端获取用户信息后重定向到客服端，至此，授权完成。")]),a._v(" "),n("p",[a._v("那么在开发环境如何调试呢？可以在正式环境域名下建一个test目录作为测试环境，开发的时候走测试环境的授权接口进行授权，然后重定向到开发环境。")]),a._v(" "),n("h1",{attrs:{id:"路由采用hash模式，在非首页页面授权重定向到首页问题"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#路由采用hash模式，在非首页页面授权重定向到首页问题","aria-hidden":"true"}},[a._v("#")]),a._v(" 路由采用hash模式，在非首页页面授权重定向到首页问题")]),a._v(" "),n("p",[a._v("在开发过程中遇到一个问题，在非首页页面授权，重定向的时候会跳转到首页，那么就将重定向到url进行encode：encodeURIComponent(redirectUrl);")]),a._v(" "),n("h1",{attrs:{id:"路由采用hash模式，在ios中分享出去的链接只能进入首页"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#路由采用hash模式，在ios中分享出去的链接只能进入首页","aria-hidden":"true"}},[a._v("#")]),a._v(" 路由采用hash模式，在ios中分享出去的链接只能进入首页")]),a._v(" "),n("p",[a._v("hash模式下，在ios中分享出去的路由被破坏，打开分享的链接，路由中的“#”会被去掉并追加？fromTimeline之类的后缀参数，这就造成了分享出去的链接只能进入首页，无法正常跳转到其他路由。\n经过网上找方法并一一实践后找到一个简单有效的方法：在分享出去的链接的“#”号前面加个“？”，如:http://xxx.com/test/?#/detail，问题得到解决。")]),a._v(" "),n("h1",{attrs:{id:"微信支付授权目录配置"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#微信支付授权目录配置","aria-hidden":"true"}},[a._v("#")]),a._v(" 微信支付授权目录配置")]),a._v(" "),n("p",[a._v("要使用微信支付功能需要配置正确的支付授权目录，vue的单页应用直接配置为域名就行。其他需要配置为调用支付的上一级目录，以/结束。")]),a._v(" "),n("h1",{attrs:{id:"使用html2canvas生成图片进行分享"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#使用html2canvas生成图片进行分享","aria-hidden":"true"}},[a._v("#")]),a._v(" 使用html2canvas生成图片进行分享")]),a._v(" "),n("p",[a._v("在项目中有个需求是将后台编辑器中商品详情的内容加上商品详情的二维码进行分享。\n在这个过程中遇到几个问题：\n1、后台编辑器中的图片资源跨域，污染canvas, 不能再从画布中提取数据, 也就是说不能再调用 toBlob(), toDataURL() 和 getImageData() 等方法，无法生成图片。")]),a._v(" "),n("p",[a._v("解决方法：\n图片服务器设置相应的 Access-Control-Allow-Origin 响应头，允许跨域访问，html2canvas参数设置useCORS: true。\n注意这里只需要将useCORS设置成true，千万不要加allowTaint:true这两个不要同时加，我当时在看官网文档的时候，看到这两个参数都是解决跨域的，后来就两个都加上去了，发现两个加上去就会有问题，具体原因可以查看源码。")]),a._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v('toImage() {\n      html2canvas(this.$refs.imageWrapper, {\n        useCORS: true,\n        scale: 2,\n        backgroundColor: "#fff"\n      }).then(canvas => {\n        let dataURL = canvas.toDataURL("image/jpeg");\n      });\n    },\n')])])]),n("p",[a._v("2、生成的图片模糊"),n("br"),a._v("\n用canvas将dom结构生成图片时会出现模糊问题，解决方法是将canvas放大后再生成图片，html2canvas默认是根据dpi进行放大，由于在这个项目中运营人员会上传长图，导致在ios中放大3倍超出canvas限制无法生成图片，所以在html2canvas参数中将\nscale设置为2，同时在运营人员上传图片的时候限制图片高度解，来决这个问题。")]),a._v(" "),n("p",[a._v("3、编辑器中的图片还未加载完成就调用了html2canvas生成图片，导致生成的图片二维码错位。")]),a._v(" "),n("p",[a._v("解决方法：\n提取出编辑器内容中的图片。判断图片加载完成后再调用html2canvas生成图片")]),a._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("this.description.replace(/<img [^>]*src=['\"]([^'\"]+)[^>]*>/gi,\n  (match, capture) => {\n  this.imgArr.push(capture);\n  }\n);\n\nlet imgTotal = this.imgArr.length;\nif (imgTotal > 0) {\n  let img = [];\n  let flag = 0;\n  for (let index = 0; index < imgTotal; index++) {\n    img[index] = new Image();\n    img[index].src = this.imgArr[index];\n    img[index].onload = () => {\n      flag++;\n      if (flag == imgTotal) {\n        // 图片全部加载完成\n        this.$nextTick(() => {\n          this.toImage();\n        });\n      }\n\n")])])]),n("p",[a._v("4、后台编辑上传到图片过长，导致canvas内容高度超出限制无法生成图片"),n("br"),a._v("\n这个问题只能在运营人员上传图片的时候限制图片高度。")])])}],s=e(0),r=Object(s.a)({},function(){this.$createElement;this._self._c;return this._m(0)},n,!1,null,null,null);r.options.__file="vue开发微信公众号记录.md";t.default=r.exports}}]);